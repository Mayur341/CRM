// <auto-generated />
using System;
using CRM.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CRM.Migrations
{
    [DbContext(typeof(CRMContext))]
    [Migration("20240408095739_first")]
    partial class first
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CRM.Models.Address", b =>
                {
                    b.Property<int>("AddressID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddressID"));

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClientID")
                        .HasColumnType("int");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pincode")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AddressID");

                    b.HasIndex("ClientID")
                        .IsUnique();

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("CRM.Models.Client", b =>
                {
                    b.Property<int>("ClientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientID"));

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClientStatusID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MobileNumber")
                        .HasColumnType("int");

                    b.Property<string>("OrganizationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SourceID")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientID");

                    b.HasIndex("ClientStatusID");

                    b.HasIndex("SourceID");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("CRM.Models.ClientStage", b =>
                {
                    b.Property<int>("ClientStatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientStatusID"));

                    b.Property<string>("StageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientStatusID");

                    b.ToTable("ClientStages");
                });

            modelBuilder.Entity("CRM.Models.Communication", b =>
                {
                    b.Property<int>("CommunicationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommunicationID"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LeadID")
                        .HasColumnType("int");

                    b.HasKey("CommunicationID");

                    b.HasIndex("LeadID");

                    b.ToTable("Communications");
                });

            modelBuilder.Entity("CRM.Models.FinancialDetails", b =>
                {
                    b.Property<int>("FID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FID"));

                    b.Property<int>("AnnualIncome")
                        .HasColumnType("int");

                    b.Property<int>("ClientID")
                        .HasColumnType("int");

                    b.Property<string>("IncomeSource")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Occupation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FID");

                    b.HasIndex("ClientID")
                        .IsUnique();

                    b.ToTable("FinancialDetails");
                });

            modelBuilder.Entity("CRM.Models.Lead", b =>
                {
                    b.Property<int>("LeadID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LeadID"));

                    b.Property<int>("ClientID")
                        .HasColumnType("int");

                    b.Property<DateTime>("LeadDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LeadDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeadName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LeadStageID")
                        .HasColumnType("int");

                    b.HasKey("LeadID");

                    b.HasIndex("ClientID");

                    b.HasIndex("LeadStageID");

                    b.ToTable("Leads");
                });

            modelBuilder.Entity("CRM.Models.LeadStage", b =>
                {
                    b.Property<int>("LeadStageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LeadStageID"));

                    b.Property<string>("LeadStageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LeadStageID");

                    b.ToTable("LeadStages");
                });

            modelBuilder.Entity("CRM.Models.Source", b =>
                {
                    b.Property<int>("SourceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SourceID"));

                    b.Property<string>("SourceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SourceID");

                    b.ToTable("Sources");
                });

            modelBuilder.Entity("CRM.Models.Address", b =>
                {
                    b.HasOne("CRM.Models.Client", "Client")
                        .WithOne("Address")
                        .HasForeignKey("CRM.Models.Address", "ClientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("CRM.Models.Client", b =>
                {
                    b.HasOne("CRM.Models.ClientStage", "ClientStatus")
                        .WithMany()
                        .HasForeignKey("ClientStatusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CRM.Models.Source", "Source")
                        .WithMany()
                        .HasForeignKey("SourceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClientStatus");

                    b.Navigation("Source");
                });

            modelBuilder.Entity("CRM.Models.Communication", b =>
                {
                    b.HasOne("CRM.Models.Lead", "Lead")
                        .WithMany("Communications")
                        .HasForeignKey("LeadID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lead");
                });

            modelBuilder.Entity("CRM.Models.FinancialDetails", b =>
                {
                    b.HasOne("CRM.Models.Client", "Client")
                        .WithOne("FinancialDetails")
                        .HasForeignKey("CRM.Models.FinancialDetails", "ClientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("CRM.Models.Lead", b =>
                {
                    b.HasOne("CRM.Models.Client", "Client")
                        .WithMany("Lead")
                        .HasForeignKey("ClientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CRM.Models.LeadStage", "LeadStage")
                        .WithMany()
                        .HasForeignKey("LeadStageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("LeadStage");
                });

            modelBuilder.Entity("CRM.Models.Client", b =>
                {
                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("FinancialDetails")
                        .IsRequired();

                    b.Navigation("Lead");
                });

            modelBuilder.Entity("CRM.Models.Lead", b =>
                {
                    b.Navigation("Communications");
                });
#pragma warning restore 612, 618
        }
    }
}
